{"version":3,"sources":["components/Users/UsersList.js","components/Common/Home.js","components/Common/Register.js","components/Common/Profileedit_recruiter.js","components/Common/Profileedit_applicant.js","components/templates/Navbar.js","components/templates/Applicant_navbar.js","components/Users/Profile.js","components/Common/Login.js","components/templates/Recruiter_navbar.js","components/Common/Add_jobs.js","components/Common/Joblistings.js","components/Common/View_job_listings_applicant.js","components/Common/Job_info.js","components/Common/my_applications.js","components/Common/job_application_info_rec.js","components/Common/Edit-job.js","components/Common/my_employees.js","components/Common/rate_my_employee.js","App.js","serviceWorker.js","index.js"],"names":["UsersList","props","state","users","sortedUsers","sortName","renderIcon","bind","sortChange","axios","get","then","response","setState","data","catch","error","console","log","array","this","flag","sort","a","b","undefined","date","Date","Grid","container","item","xs","md","lg","List","component","aria-label","ListItem","text","TextField","id","label","fullWidth","InputProps","endAdornment","InputAdornment","IconButton","button","noValidate","autoComplete","Divider","divider","Autocomplete","options","getOptionLabel","option","name","style","width","renderInput","params","variant","Paper","Table","size","TableHead","TableRow","TableCell","Button","onClick","TableBody","map","user","ind","key","email","Component","Register","onChangeimage","e","vivi","FileReader","onload","image","target","files","readAsDataURL","onChangecv","cv","result","password","confirmPassword","emailerrortext","confirmPasswordErrorText","type","bio_recruiter","contact_number","list_of_languages","education","institution","startyear","endyear","success","onChangeUsername","onChangeEmail","onChangeConfirmPassword","onChangePassword","onSubmit","onChangetype","onChangecontactnumber","onChangebio_recruiter","onChangelist_of_languages","onChangeEndyear","onChangeInstitution","onChangeStartyear","onSubmitEdu","test","event","errortext","validateEmail","value","preventDefault","userAdd","res","tmpflag","i","length","alert","hash","bcrypt","hashSync","newUser","now","split","post","err","obj","e1","push","divi","className","onChange","window","location","href","Container","maxWidth","CssBaseline","paddingLeft","Avatar","Profileedit_recruiter","bio","onChangebio","onChangecontact_number","onChangename","localStorage","mail","getItem","newrec","history","reload","setItem","React","cardStyle","display","transitionDuration","height","onChangeinstitution","onChangestartyear","onChangeendyear","formData","FormData","append","json","Card","src","NavBar","to","Applicant_navbar","clear","Profile","Login","addUser","temper","compareSync","_id","temp","applicant_ka_email","method","marginLeft","color","Recruiter_navbar","Add_job","title","name_recrutier","email_recruiter","max_applications","max_positions","deadline_of_application","required_skills","type_of_job","duration","salary_per_month","date_of_posting","onChangetitle","onChangemax_applications","onChangemax_positions","onChangedeadline_of_application","onChangerequired_skills","onChangetype_of_job","onChangeduration","onChangesalary_per_month","newJob","name_recruiter","min","Joblistings","deletejob","listings","data_rec","email_rec","filter","el","job","kaha_jana","pathname","jana_kaha","backgroundColor","View_job_listings_applicant","sortbydurationdec","jobs","n","j","sortbydurationinc","sortbyratingdec","rating","sortbyratinginc","sortbysalarydec","sortbysalaryinc","search","job_type","job_salary","job_duration","salary_lower","salary_upper","applied_jobs","onChangeSearch","onchangedurationfilter","onSubmitdurationfilter","onChangejobtypefilter","onSubmitjobtypefilter","onchangesalarylower","onchangesalaryupper","onSubmitsalaryrange","newval","applicant_email","salaryminmax","max","jobtypefilter","job_ka_type","dur","mark","job_id","www","disabled","number_of_positions_filled","includes","Job_info","currentjob","idid","sop","lololol","status","applicant_data","onChangesop","chunk","match","rat","applicant_ka_data","veer","application_count","yoyo","job_salary_per_month","status_of_job","job_title","name_applicant","skills","My_applications","rate_recruiter","rate_recrutier","application","date_of_joining","Job_application_info","sortbydoadec","applications","date_of_application","sortbydoainc","sortbynamedec","sortbynameinc","applicant_rating","shortlist","accept","reject","education_applicant","xx","skills_applicant","Edit_job","My_employees","rate_applicant","sortbytitledec","sortbytitleinc","sortbydojdec","sortbydojinc","Rate_applicant","onChangerating","ratecount","rate_count","newrating","doupdate","App","user_type","navbar","exact","path","render","Profileedit_applicant","Viewjoblisting","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7cdf013c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\n\n\nclass UsersList extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {users: [],sortedUsers: [], sortName:true};\n        this.renderIcon = this.renderIcon.bind(this);\n        this.sortChange = this.sortChange.bind(this);\n    }\n\n    componentDidMount() {\n        axios.get('http://localhost:4000/user/user')\n             .then(response => {\n                 this.setState({users: response.data, sortedUsers:response.data});\n             })\n             .catch(function(error) {\n                 console.log(error);\n             })\n    }\n\n    sortChange(){\n/**\n *      Note that this is sorting only at front-end.\n */\n        var array = this.state.users;\n        var flag = this.state.sortName;\n        array.sort(function(a, b) {\n            if(a.date != undefined && b.date != undefined){\n                return (1 - flag*2) * (new Date(a.date) - new Date(b.date));\n            }\n            else{\n                return 1;\n            }\n          });\n        this.setState({\n            users:array,\n            sortName:!this.state.sortName,\n        })\n    }\n\n    renderIcon(){\n        if(this.state.sortName){\n            return(\n                <ArrowDownwardIcon/>\n            )\n        }\n        else{\n            return(\n                <ArrowUpwardIcon/>\n            )            \n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Grid container>\n                <Grid item xs={12} md={3} lg={3}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <ListItem text>\n                                        <h3>Filters</h3>\n                        </ListItem>\n                    </List>\n                </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                    <List component=\"nav\" aria-label=\"mailbox folders\">\n                        <TextField \n                        id=\"standard-basic\" \n                        label=\"Search\" \n                        fullWidth={true}   \n                        InputProps={{\n                            endAdornment: (\n                                <InputAdornment>\n                                    <IconButton>\n                                        <SearchIcon />\n                                    </IconButton>\n                                </InputAdornment>\n                            )}}\n                        />\n                    </List>\n                    </Grid>\n                </Grid>\n                <Grid container>\n                    <Grid item xs={12} md={3} lg={3}>\n                        <List component=\"nav\" aria-label=\"mailbox folders\">\n\n                            <ListItem button>\n                                <form noValidate autoComplete=\"off\">\n                                    <label>Salary</label>\n                                    <TextField id=\"standard-basic\" label=\"Enter Min\" fullWidth={true} />\n                                    <TextField id=\"standard-basic\" label=\"Enter Max\" fullWidth={true}/>\n                                </form>                                                                \n                            </ListItem>\n                            <Divider />\n                            <ListItem button divider>\n                                <Autocomplete\n                                    id=\"combo-box-demo\"\n                                    options={this.state.users}\n                                    getOptionLabel={(option) => option.name}\n                                    style={{ width: 300 }}\n                                    renderInput={(params) => <TextField {...params} label=\"Select Names\" variant=\"outlined\" />}\n                                />\n                            </ListItem>\n                        </List>\n                    </Grid>\n                    <Grid item xs={12} md={9} lg={9}>\n                        <Paper>\n                            <Table size=\"small\">\n                                <TableHead>\n                                    <TableRow>\n                                            <TableCell> <Button onClick={this.sortChange}>{this.renderIcon()}</Button>Date</TableCell>\n                                            <TableCell>Name</TableCell>\n                                            <TableCell>Email</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.users.map((user,ind) => (\n                                        <TableRow key={ind}>\n                                            <TableCell>{user.date}</TableCell>\n                                            <TableCell>{user.name}</TableCell>\n                                            <TableCell>{user.email}</TableCell>\n                                        </TableRow>\n                                ))}\n                                </TableBody>\n                            </Table>\n                        </Paper>               \n                    </Grid>    \n                </Grid>            \n            </div>\n        )\n    }\n}\n\nexport default UsersList;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nexport default class Home extends Component {\n    \n    constructor(props) {\n        super(props);\n        this.state = {\n            name:'',\n            email:''\n        }\n    }\n\n    componentDidMount() {\n        // this.name = \"veeral\";\n    }\n\n    render() {\n        return (\n            <div>\n                Happy Coding! {};\n           </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\nimport bcrypt from 'bcryptjs';\n// import TextField from 'material-ui/TextField';\n// import getMuiTheme from 'material-ui/styles/getMuiTheme'\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n// import Paper from 'material-ui/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nexport default class Register extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n            emailerrortext: '',\n            confirmPasswordErrorText: '',\n            type: 'applicant',\n            date:null,\n            bio_recruiter:'',\n            contact_number:'',\n            list_of_languages:'',\n            education:[],\n            institution:'',\n            startyear:'',\n            endyear:'',\n            image:'',\n            cv:'',\n            success:0\n        }\n\n        this.onChangeUsername = this.onChangeUsername.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeConfirmPassword = this.onChangeConfirmPassword.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangetype = this.onChangetype.bind(this);\n        this.onChangecontactnumber = this.onChangecontactnumber.bind(this);\n        this.onChangebio_recruiter = this.onChangebio_recruiter.bind(this);\n        this.onChangelist_of_languages = this.onChangelist_of_languages.bind(this);\n\n        this.onChangeEndyear = this.onChangeEndyear.bind(this);\n        this.onChangeInstitution = this.onChangeInstitution.bind(this);\n        this.onChangeStartyear = this.onChangeStartyear.bind(this);\n\n        this.onSubmitEdu = this.onSubmitEdu.bind(this);\n\n        this.onChangeimage = this.onChangeimage.bind(this);\n        this.onChangecv = this.onChangecv.bind(this);\n    }\n    \n    validateEmail(e) {\n        var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(e);\n    } \n\n    onChangeEmail(event){\n        var errortext=''\n        if(!this.validateEmail(event.target.value)){\n            errortext=\"email not excepted\"\n        }\n        this.setState({ emailerrortext: errortext , email: event.target.value })\n    }\n\n    onChangelist_of_languages(event){\n        this.setState({list_of_languages: event.target.value});\n    }\n\n    onChangeUsername(event) {\n        this.setState({ name: event.target.value });\n    }\n\n    onChangecontactnumber(event){\n        this.setState({contact_number: event.target.value});\n    }\n\n    onChangebio_recruiter(event){\n        this.setState({bio_recruiter: event.target.value});\n    }\n\n    onChangePassword(event){\n        this.setState({ password: event.target.value });\n    }\n\n    onChangeStartyear(event){\n        this.setState({startyear: event.target.value});\n    }\n\n    onChangeInstitution(event){\n        this.setState({institution: event.target.value});\n    }\n\n    onChangeEndyear(event){\n        this.setState({endyear: event.target.value});\n    }\n    onChangeConfirmPassword(event){\n        var errortext = ''\n        if(event.target.value != this.state.password){\n            errortext = 'password are not matched'\n        }\n        this.state({ confirmPassword: event.target.value , confirmPasswordErrorText: errortext });\n    }\n\n    onChangetype(event){\n        this.setState({ type: event.target.value });\n    }\n\n    onSubmit(event) {\n        event.preventDefault();\n        const userAdd = {\n            email: this.state.email,\n            password: this.state.password\n        }\n        console.log(userAdd)\n        axios.get('http://localhost:4000/user/user', userAdd)\n        .then(res => { \n            var tmpflag = 0\n            var temp = \"none\";\n            console.log(res);\n            for(var i=0;i<res[\"data\"].length;i++)\n            {\n                if(res[\"data\"][i][\"email\"] === userAdd[\"email\"])\n                {\n                    tmpflag = 1;\n                    temp = res[\"data\"][i][\"type\"];\n                    break;\n                }\n            }\n            if(tmpflag)\n            {\n                console.log(\"already registered\");\n                alert(\"already registered\");\n            }\n            else\n            {\n                if((this.state.confirmPasswordErrorText=='' && this.state.emailerrortext=='') && (this.state.password.length>=6)){   \n                    const rounds = 1;\n                    console.log(this.state.password);\n                    const hash = bcrypt.hashSync(this.state.password,rounds);\n                    const newUser = {\n                        name: this.state.name,\n                        email: this.state.email,\n                        password: hash,\n                        type: this.state.type,\n                        date: Date.now(),\n                        bio_recruiter: this.state.bio_recruiter,\n                        contact_number: this.state.contact_number,\n                        list_of_languages: this.state.list_of_languages,\n                        education: this.state.education,\n                        cv: this.state.cv,\n                        image: this.state.image, \n                    }\n                    console.log(this.state.password);\n                    console.log(hash);\n                    console.log(newUser);\n                    if(this.state.type === \"recruiter\"){\n                        if(this.state.bio_recruiter.split(' ').length < 251 && this.state.contact_number.length === 10){\n                            console.log(\"lololol\");\n                            axios.post('http://localhost:4000/recruiter/recruiter/add', newUser)\n                            .then(res => {alert(\"Created recruiter\\t\" + res.data.name);console.log(res.data)\n                            this.setState({success:1})\n                            console.log(\"sucess updated\")\n                            })\n                            .catch(err => { \n                                console.log(err) \n                            });\n                        }\n                        else{\n                            alert(\"contact number length is short or bio is too long keep it under 250 words\");\n                        }\n                    }\n                    else if(this.state.type === \"applicant\"){\n                        if(this.state.list_of_languages !== ''){\n                            axios.post('http://localhost:4000/applicant/applicant/add', newUser)\n                            .then(res => {alert(\"Created applicant\\t\" + res.data.name);console.log(res.data)\n                            this.setState({success:1})\n                            console.log(\"sucess updated\")\n                            })\n                            .catch(err => { \n                                console.log(err) \n                            });\n                        }\n                        else{\n                            alert(\"fill all components\");\n                        }\n                    }\n                    axios.post('http://localhost:4000/user/register', newUser)\n                }\n                else if(this.state.password.length<6){\n                    alert(\"password length should be atleast 6\");console.log(\"short password\");\n                }\n                else{\n                    alert(\"email format is wrong\");console.log(\"email format is wrong\");\n                }\n                this.setState({\n                    name: '',\n                    email: '',\n                    password: '',\n                    confirmPassword: '',\n                    // emailerrortext: '',\n                    // confirmPasswordErrorText: '',\n                    type: 'applicant',\n                    date:null,\n                    bio_recruiter:'',\n                    contact_number:'',\n                    list_of_languages:'',\n                    image:'',\n                    cv:'',\n                    education:[]\n                }); \n            }\n        })\n        .catch(err => { \n            console.log(err) \n        });\n    }\n\n    onChangeimage = e => {\n\t\tconst vivi = new FileReader();\n\t\tvivi.onload = function() {\n\t\t\tthis.setState({ image: e.target.files[0] });\n\t\t}.bind(this);\n\t\tvivi.readAsDataURL(e.target.files[0]);\n\t};\n\n    onChangecv = e => {\n\t\tconst vivi = new FileReader();\n\t\tvivi.onload = function() {\n\t\t\tthis.setState({ cv: vivi.result });\n\t\t}.bind(this);\n        vivi.readAsDataURL(e.target.files[0]);\n\t};\n\n    onSubmitEdu(e){\n        e.preventDefault();\n        const obj = {\n            institution: this.state.institution,\n            startyear: this.state.startyear,\n            endyear: this.state.endyear\n        }\n\n        if(this.state.institution === '' || this.state.startyear === ''){\n            alert(\"you cannot leave institution and startyear feild empty.\")\n        }\n        else{\n            let e1 = this.state.education;\n            e1.push(obj);\n            this.setState({\n            education: e1,\n            institution: '',\n            startyear: '',\n            endyear: ''\n        });\n        }\n        \n    }\n\n    render() {\n        let divi = null;\n        if(this.state.type === \"applicant\"){\n            divi = \n            <div>\n                <div className=\"form-group\">\n                    <label>languages that you are comfortable in : </label>\n                    <input type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.list_of_languages}\n                        onChange={this.onChangelist_of_languages}\n                    />\n                    <form>\n                        <div className=\"form-group\">\n                            <h3>add education</h3>\n                            <label>Institution: </label>\n                            <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.institution}\n                               onChange={this.onChangeInstitution}\n                            />  \n                            <label>Start Year: </label>\n                            <input type=\"text\" \n                            className=\"form-control\" \n                            value={this.state.startyear}\n                            onChange={this.onChangeStartyear}\n                            />\n                            <label>End Year: </label>\n                            <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.endyear}\n                               onChange={this.onChangeEndyear}\n                            />\n                            <div className=\"form-group\">\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"ADD\" className=\"btn btn-primary\" onClick={this.onSubmitEdu}/>\n                            </div>\n                            {/* <label>Select profile photo:</label> */}\n                            {/* <br></br>\n                            <br></br> */}\n                                {/* <input\n                                    type=\"file\"\n                                    onChange={this.onChangeimage}\n                                    // value={this.state.image}\n                                    id=\"image\"\n                                    name=\"image\"\n                                ></input> */}\n                            </div>\n                            <div className=\"form-group\">\n                            {/* <label>upload cv</label> */}\n                            {/* <br></br>\n                            <br></br> */}\n                                {/* <input\n                                    type=\"file\"\n                                    onChange={this.onChangecv}\n                                    // value={this.state.image}\n                                    id=\"file\"\n                                    name=\"file\"\n                                ></input> */}\n                            </div>\n                            \n                        </div>\n                    </form>\n                </div>\n\n            </div>\n        }\n        else{\n            divi =\n            <div> \n                <div className=\"form-group\">\n                    <label>contact number: </label>\n                    <input type=\"number\" \n                        className=\"form-control\" \n                        value={this.state.contact_number}\n                        onChange={this.onChangecontactnumber}\n                        />  \n                </div>\n                <div className=\"form-group\">\n                <label>bio: </label>\n                <input type=\"text\" \n                    className=\"form-control\" \n                    value={this.state.bio_recruiter}\n                    onChange={this.onChangebio_recruiter}\n                    />  \n                </div>\n            </div>\n        }\n        return (\n            this.state.success == 1 ? window.location.href='/login' :\n            <Container  component=\"main\" maxWidth=\"xs\">\n                <CssBaseline /> \n                <div className=\"form-group\"/>\n                {/* </div>                */}\n                <div style={{paddingLeft:170}}>              \n                    <Avatar />                    \n                    {/* </Avatar>  */}\n                </div>\n                <div>\n                    <form onSubmit={this.onSubmit}>\n                        <div className=\"form-group\">\n                            <label>Username: </label>\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                value={this.state.name}\n                                onChange={this.onChangeUsername}\n                                />\n                        </div>\n                        <div className=\"form-group\">\n                            <label>Email: </label>\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                value={this.state.email}\n                                onChange={this.onChangeEmail}\n                                />  \n                        </div>\n                        <div className=\"form-group\">\n                            <label>Password: </label>\n                            <input type=\"text\" \n                                className=\"form-control\" \n                                value={this.state.password}\n                                onChange={this.onChangePassword}\n                                />  \n                        </div>\n                        <div className=\"form-group\">\n                            <label>Type</label>\n                            <div className=\"form-group\">\n                                {/* <p>(don't be lazy and do not think applicant is selected so you dont have to select that.)</p> */}\n                                {/* <br></br> */}\n                                <select className=\"form-control\"  onChange={this.onChangetype} value={this.state.type}>\n                                    {/* <option value=\"0\">pick type</option> */}\n                                    <option value=\"applicant\">applicant</option>\n                                    <option value=\"recruiter\">recruiter</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div>\n                            {divi}\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"Register\" className=\"btn btn-primary\"/>\n                        </div>\n                    </form>\n                </div>\n            </Container>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n// import React, {Component} from 'react';\n// import axios from 'axios';\nimport bcrypt from 'bcryptjs';\n// import TextField from 'material-ui/TextField';\n// import getMuiTheme from 'material-ui/styles/getMuiTheme'\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n// import Paper from 'material-ui/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nexport default class Profileedit_recruiter extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n         \n            bio:'',\n            contact_number:'',\n            name:''\n        }\n        // this.onChangetitle = this.onChangetitle.bind(this);\n        // this.onChangemax_applications = this.onChangemax_applications.bind(this);\n        // this.onChangemax_positions = this.onChangemax_positions.bind(this);\n        // this.onChangedeadline_of_application = this.onChangedeadline_of_application.bind(this);\n        // this.onChangerequired_skills = this.onChangerequired_skills.bind(this);\n        // this.onChangetype_of_job = this.onChangetype_of_job.bind(this);\n        // this.onChangeduration = this.onChangeduration.bind(this);\n        // this.onChangesalary_per_month = this.onChangesalary_per_month.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangebio = this.onChangebio.bind(this);\n        this.onChangecontact_number = this.onChangecontact_number.bind(this);\n        this.onChangename = this.onChangename.bind(this);\n    }\n    \n    onChangebio(event) {\n        this.setState({ bio: event.target.value });\n    }\n\n    onChangecontact_number(event) {\n        this.setState({ contact_number: event.target.value });\n    }\n\n    onChangename(event){\n        this.setState({name : event.target.value});\n    }\n\n    // onChangemax_positions(event) {\n    //     this.setState({ max_positions: event.target.value });\n    // }\n\n    // onChangedeadline_of_application(event) {\n    //     this.setState({ deadline_of_application: event.target.value });\n    // }\n\n    // onChangerequired_skills(event) {\n    //     this.setState({ required_skills: event.target.value });\n    // }   \n\n    // onChangetype_of_job(event) {\n    //     this.setState({ type_of_job: event.target.value });\n    // }\n\n    // onChangeduration(event) {\n    //     this.setState({ duration: event.target.value });\n    // }\n\n    // onChangesalary_per_month(event) {\n    //     this.setState({ salary_per_month: event.target.value });\n    // }\n    componentDidMount()\n    {   \n        console.log(localStorage)\n        var mail=localStorage.getItem(\"user_email\")\n        console.log(mail)\n        axios.post('http://localhost:4000/recruiter/get_a_recruiter_by_email',{\"email\":mail})\n        .then(res => {this.setState({user:res.data})\n        console.log(this.state.user)\n        this.setState({name:this.state.user.name})\n        this.setState({email:this.state.user.email})\n        this.setState({bio:this.state.user.bio})\n        this.setState({contact_number:this.state.user.contact_number})\n    })\n    };\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newrec = {\n            // title: this.state.title,\n            // max_applications: this.state.max_applications,\n            // max_positions:  this.state.max_positions,\n            // deadline_of_application: Date(this.state.deadline_of_application),\n            // required_skills: this.state.required_skills,\n            // type_of_job: this.state.type_of_job,\n            // duration: this.state.duration,\n            // salary_per_month: this.state.salary_per_month,\n            // name_recruiter: localStorage.getItem('user_name'),\n            // email_recruiter: localStorage.getItem('user_email'),\n            // date_of_posting: Date.now()\n            bio: this.state.bio,\n            contact_number: this.state.contact_number,\n            email : localStorage.getItem(\"user_email\"),\n            name: this.state.name,\n        }\n\n        // console.log(newJob);\n        console.log(localStorage.getItem('user_type'));\n        console.log(localStorage.getItem('isloggedin'));\n        if(localStorage.getItem('user_type') !== 'recruiter' || localStorage.getItem('isloggedin') !== 'true'){\n            alert(\"please login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }       \n        else{\n            if(this.state.contact_number.length === 10 && this.state.bio.split(' ').length < 251){\n                axios.post('http://localhost:4000/recruiter/edit_recruiter_profile',newrec)\n                .then(res => {\n                    alert(\"profile successfully edited\");\n                    console.log(res.data)\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n                axios.post('http://localhost:4000/user/updateuser',newrec)\n                .then(res => {\n                    \n                    console.log(res.data)\n                    localStorage.setItem('user_name', this.state.name);\n                    console.log(localStorage)\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            }\n            else{\n                alert(\"number format is wrong or bio is too big (keep it under 251 words)\")\n            }\n        }\n        this.setState({\n            // title: '',\n            // name_recrutier: '',\n            // email_recruiter: '',\n            // max_applications: '',\n            // max_positions: '',\n            // deadline_of_application: '', \n            // required_skills: '',\n            // type_of_job: 'full_time',\n            // duration: '0',\n            // salary_per_month: '',\n            // date_of_posting: Date.now()\n            bio: '',\n            contact_number: '',\n            name:'',\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>you can edit your profile here</h1>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>name: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangename}\n                               />\n                    </div>\n                    <div className=\"form-group\">\n                        <label>update bio: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.bio}\n                               onChange={this.onChangebio}\n                               />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label>update contact number: </label>\n                        <input type=\"number\" \n                               className=\"form-control\" \n                               value={this.state.contact_number}\n                               onChange={this.onChangecontact_number}\n                               />  \n                    </div>\n\n                    {/* <div className=\"form-group\">\n                        <label>update name: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.name}\n                               onChange={this.onChangename}\n                               />  \n                    </div> */}\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"update\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\nimport Card from '@material-ui/core/Card'\n// import React, {Component} from 'react';\n// import axios from 'axios';\nimport bcrypt from 'bcryptjs';\n// import TextField from 'material-ui/TextField';\n// import getMuiTheme from 'material-ui/styles/getMuiTheme'\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n// import Paper from 'material-ui/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nvar cardStyle = {\n    display: 'disk',\n    width: '15vw',\n    transitionDuration: '0.3s',\n    height: '20vw'\n}\n\nexport default class Profileedit_recruiter extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n         \n            list_of_languages:'',\n            education: [],\n            institution:'',\n            startyear:'',\n            endyear:'',\n            image:'',\n            cv:'',\n            // contact_number:'',\n            name:''\n        }\n        \n        this.onSubmit = this.onSubmit.bind(this);\n        this.onChangelist_of_languages = this.onChangelist_of_languages.bind(this);\n        this.onChangeimage = this.onChangeimage.bind(this);\n        this.onChangecv = this.onChangecv.bind(this);\n        this.onChangeinstitution = this.onChangeinstitution.bind(this);\n        this.onChangestartyear = this.onChangestartyear.bind(this);\n        this.onChangeendyear = this.onChangeendyear.bind(this);\n        this.onSubmitEdu = this.onSubmitEdu.bind(this);\n        this.onChangename = this.onChangename.bind(this);\n    }\n    \n    onChangelist_of_languages(event) {\n        this.setState({ list_of_languages: event.target.value });\n    }\n\n    onChangeimage(event) {\n        this.setState({ image: event.target.files[0] });\n        const formData = new FormData();\n        formData.append('file', event.target.files[0]);\n            axios.post('http://localhost:4000/applicant/addfile?type=image&email=' + localStorage.getItem('user_email'), formData)\n            .then(res => {\n                console.log(res.json);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    onChangecv(event){\n        this.setState({cv : event.target.value});\n        const formData = new FormData();\n        formData.append('file', event.target.files[0]);\n            axios.post('http://localhost:4000/applicant/addfile?type=cv&email=' + localStorage.getItem('user_email'), formData)\n            .then(res => {\n                console.log(res.json);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    onChangestartyear(event){\n        this.setState({startyear : event.target.value});\n        \n    }\n\n    onChangeinstitution(event){\n        this.setState({institution : event.target.value});\n    }\n\n    onChangeendyear(event){\n        this.setState({endyear : event.target.value});\n    }\n\n    onChangename(event){\n        this.setState({name: event.target.value});\n    }\n    componentDidMount()\n    {   \n        console.log(localStorage)\n        var mail=localStorage.getItem(\"user_email\")\n        console.log(mail)\n        axios.post('http://localhost:4000/applicant/get_an_applicant_by_email',{\"applicant_ka_email\":mail})\n        .then(res => {this.setState({user:res.data})\n        console.log(this.state.user)\n        this.setState({name:this.state.user.name})\n        this.setState({email:this.state.user.email})\n        this.setState({education:this.state.user.education})\n        this.setState({list_of_languages:this.state.user.list_of_languages})\n     \n\n    })\n   \n    };\n  \n    onSubmit(e) {\n        e.preventDefault();\n        console.log(\"lol\")\n        const newrec = {\n            \n            list_of_languages:this.state.list_of_languages,\n            education: this.state.education,\n            email: localStorage.getItem('user_email'),\n            image:this.state.image,\n            cv:this.state.cv,\n            // contact_number:'',\n            name:this.state.name\n        }\n\n        // console.log(newJob);\n        console.log(localStorage.getItem('user_type'));\n        console.log(localStorage.getItem('isloggedin'));\n        if(localStorage.getItem('user_type') !== 'applicant' || localStorage.getItem('isloggedin') !== 'true'){\n            alert(\"please login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }       \n        else{\n            console.log(newrec);\n            // if(this.state.contact_number.length === 10 && this.state.bio.split(' ').length < 251){\n                axios.post('http://localhost:4000/applicant/edit_applicant_profile',newrec)\n                .then(res => {\n                    alert(\"profile successfully edited\");\n                    console.log(res.data)\n\n                })\n                .catch(function(error) {\n                    console.log(error);\n                });\n                axios.post('http://localhost:4000/user/updateuser',newrec)\n                .then(res => {\n                    \n                    console.log(res.data)\n                    localStorage.setItem('user_name', this.state.name);\n                    console.log(localStorage)\n                })\n                .catch(function(error) {\n                    console.log(error);\n                })\n            \n            // if(newrec.image != ''){\n            //     axios.post('http://localhost:4000/applicant/addfile?type=image&email=' + newrec.email, newrec.image )\n            //     .then(res => {\n            //         console.log(res.json);\n            //     })\n            //     .catch(err => {\n            //         console.log(err);\n            //     })\n            // }\n            // }\n            // else{\n            //     alert(\"number format is wrong or bio is too big (keep it under 251 words)\")\n            // }\n        }\n        this.setState({\n           \n            list_of_languages:'',\n            education: [],\n            institution:'',\n            startyear:'',\n            endyear:'',\n            image:'',\n            cv:'',\n            // contact_number:'',\n            name:''\n        });\n    }\n\n  \n\n    onSubmitEdu(e){\n        e.preventDefault();\n        const obj = {\n            institution: this.state.institution,\n            startyear: this.state.startyear,\n            endyear: this.state.endyear\n        }\n\n        if(this.state.institution === '' || this.state.startyear === ''){\n            alert(\"you cannot leave institution and startyear feild empty.\")\n        }\n        else{\n            let e1 = this.state.education;\n            e1.push(obj);\n            this.setState({\n            education: e1,\n            institution: '',\n            startyear: '',\n            endyear: ''\n        });\n        }\n        \n    }\n\n    render() {\n        return (\n            <div>\n                <Card style={cardStyle}>\n                    <img src={'http://localhost:4000/image/' + localStorage.getItem('user_image')} width='300' height='400'/>\n                </Card>\n                <div className=\"form-group\">\n                    <label>name : </label>\n                    <input type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.name}\n                        onChange={this.onChangename}\n                    />\n                    <label>languages that you are comfortable in : </label>\n                    <input type=\"text\" \n                        className=\"form-control\" \n                        value={this.state.list_of_languages}\n                        onChange={this.onChangelist_of_languages}\n                    />\n                    <form onSubmit={this.onSubmit} >\n                        <div className=\"form-group\">\n                            <h3>add education</h3>\n                            <label>Institution: </label>\n                            <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.education.length ==0 ? console.log(\"yes\"):this.state.education[0].institution}\n                               onChange={this.onChangeinstitution}\n                            />  \n                            <label>Start Year: </label>\n                            <input type=\"text\" \n                            className=\"form-control\" \n                            value={this.state.education.length ==0 ? console.log(\"yes\"):this.state.education[0].startyear}\n                            onChange={this.onChangestartyear}\n                            />\n                            <label>End Year: </label>\n                            <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.education.length ==0 ? console.log(\"yes\"):this.state.education[0].endyear}\n                               onChange={this.onChangeendyear}\n                            />\n                            <div className=\"form-group\">\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"ADD\" className=\"btn btn-primary\" onClick={this.onSubmitEdu}/>\n                            </div>\n                            <label>Select profile photo:</label>\n                            {/* <br></br>\n                            <br></br> */}\n                                <input\n                                    type=\"file\"\n                                    onChange={this.onChangeimage}\n                                    // value={this.state.image}\n                                    id=\"image\"\n                                    name=\"image\"\n                                ></input>\n                            </div>\n                            <div className=\"form-group\">\n                            <label>upload cv</label>\n                            {/* <br></br>\n                            <br></br> */}\n                                <input\n                                    type=\"file\"\n                                    onChange={this.onChangecv}\n                                    // value={this.state.image}\n                                    id=\"file\"\n                                    name=\"file\"\n                                ></input>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"update profile\" className=\"btn btn-primary\"/>\n                            </div>\n                            \n                        </div>\n                    </form>\n                </div>\n                <div>\n                <iframe src={'http://localhost:4000/cv/' + localStorage.getItem('user_email') + '.pdf#zoom=FitH'} width=\"400\" height=\"533\"> </iframe>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nexport default class NavBar extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>                \r\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                    \r\n                    <div className=\"collapse navbar-collapse\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {/* <li className=\"navbar-item\">\r\n                                <Link to=\"/users\" className=\"nav-link\">Users</Link>\r\n                            </li> */}\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/register\" className=\"nav-link\">Register</Link>\r\n                            </li>\r\n                            <li className=\"navbar-item\">\r\n                                <Link to=\"/login\" className=\"nav-link\">Login</Link>\r\n                            </li>\r\n                            {/* <li className=\"navbar-item\">\r\n                                <Link to=\"/profile\" className=\"nav-link\">My Profile</Link>\r\n                            </li>                             */}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nexport default class Applicant_navbar extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>                \n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <div className=\"collapse navbar-collapse\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"navbar-item\">\n                                <Link to=\"/login\" className=\"nav-link\" onClick={() => {localStorage.clear();\n                                window.location.href=\"/login\";}}>Logout</Link>\n                            </li>\n                            <li className=\"navbar-item\">\n                                <Link to=\"/profileedit_applicant\" className=\"nav-link\">My applicant Profile</Link>\n                            </li>\n\n                            <li className=\"navbar-item\">\n                                <Link to=\"/search_job\" className=\"nav-link\">all the jobs</Link>\n                            </li>\n\n                            <li className=\"navbar-item\">\n                                <Link to=\"/my_applications\" className=\"nav-link\">my applications</Link>\n                            </li>\n\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\n\r\nclass Profile extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {users: [],sortName:true};\r\n        // this.sortClicked = this.sortClicked.bind(this);\r\n        // this.renderIcon = this.renderIcon.bind(this);\r\n        // this.sortChange = this.sortChange.bind(this);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid item xs={12} md={12} lg={12}>\r\n                    <Paper>\r\n                            \r\n                    </Paper>               \r\n                </Grid>                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, {Component} from 'react';\nimport axios from 'axios';\nimport bcrypt from 'bcryptjs';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport  './login.css';\n\n \n\nexport default class Login extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: '',\n            password: ''\n        }\n\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangePassword = this.onChangePassword.bind(this);\n        this.addUser = this.addUser.bind(this);\n    }\n\n    onChangeEmail(event){\n        this.setState({ email: event.target.value })\n    }\n\n    onChangePassword(event){\n        this.setState({ password: event.target.value })\n    }\n\n    addUser(event) {\n        event.preventDefault();\n        const userAdd = {\n            email: this.state.email,\n            password: this.state.password\n            // type: this.state.type\n        }\n        console.log(userAdd)\n        axios.post('http://localhost:4000/user/login', userAdd)\n        .then(res => { \n            var temper = bcrypt.compareSync(userAdd.password,res.data.password);\n            console.log(res);\n            if (res.data.email===userAdd.email && temper) {\n                alert(\"hii\");\n                console.log(res.data);\n                localStorage.setItem('user_type', res.data.type);\n                localStorage.setItem('user_name', res.data.name);\n                localStorage.setItem('user_id',res.data._id);\n                localStorage.setItem('isloggedin',true);\n                localStorage.setItem('user_email', res.data.email);\n                if(res.data.type == 'applicant'){\n                    const temp = {\n                        applicant_ka_email: res.data.email\n                    };\n                    axios.post('http://localhost:4000/applicant/get_an_applicant_by_email', temp).then((res) => {\n                    console.log(res.data, 'is the data');    \n                    localStorage.setItem('user_image', res.data.image);\n                        console.log(\"this is the image we wanted \", localStorage.getItem('user_image'));\n                        window.location = '/';\n\n                    }).catch(err => {\n                        console.log(res);\n                        console.log(err);\n                    });\n                } else {\n                    window.location = '/';\n                }\n                // this.props.history.push(\"/\");\n            }\n            else {\n                alert(\"Invalid Password\")\n            }  \n        })\n        .catch(err => { \n            alert(\"user not found\");\n            console.log(err) \n        });\n    }\n    \n\n    render() {\n        return (\n             < div className=\"login\">\n                <div className=\"quote\"> Login Page</div>  \n                <form onSubmit={this.addUser} method=\"user\">\n                <div className=\"hero-text\">\n               \n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-2 col-form-label text-left\">Email: </label>\n                        <div className=\"col-sm-9\" style={{marginLeft:\"10px\"}}>\n                            <input type=\"text\" className=\"form-control\" onChange={this.onChangeEmail} name=\"name\" value={this.state.email}/>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\" >\n                        <label className=\"col-sm-2 col-form-label text-left\">Password: </label>\n                        <div className=\"col-sm-9\" style={{marginLeft:\"10px\"}}>\n                            <input type=\"password\" className=\"form-control\" onChange={this.onChangePassword} name=\"password\" value={this.state.password}/>\n                        </div>\n                    </div>\n                    <hr/>\n                    <div style={{marginLeft: \"140px\"}} className=\"row\">\n                        <button type=\"submit\" className=\"btn btn-warning\" style={{marginLeft: \"0px\"}}>Login</button>\n                    </div>\n                    <div ><br></br>\n                    <Link to=\"/register\" className=\"nav-link\" style={{color:\"black\"}}>Don't have a account? SignUp</Link>  \n                    </div>\n                    </div>\n                </form>\n                </div>\n              \n        )\n    }\n}","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nexport default class Recruiter_navbar extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div>                \n                <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                    <div className=\"collapse navbar-collapse\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            <li className=\"navbar-item\">\n                                <Link to=\"/login\" className=\"nav-link\" onClick={() => {localStorage.clear();\n                                window.location.href=\"/login\";}}>Logout</Link>\n                            </li>\n                            <li className=\"navbar-item\">\n                                <Link to=\"/profileedit_recruiter\" className=\"nav-link\">My recruiter Profile</Link>\n                            </li>\n\n                            <li className=\"navbar-item\">\n                                <Link to=\"/addjob\" className=\"nav-link\">add job</Link>\n                            </li>\n                            <li className=\"navbar-item\">\n                                <Link to=\"/job-listings\" className=\"nav-link\">job listings</Link>\n                            </li>\n                            <li className=\"navbar-item\">\n                                <Link to=\"/my-employees\" className=\"nav-link\">my employees</Link>\n                            </li>\n\n                        </ul>\n                    </div>\n                </nav>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\nimport bcrypt from 'bcryptjs';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nexport default class Add_job extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            name_recrutier: '',\n            email_recruiter: '',\n            max_applications: '',\n            max_positions: '',\n            deadline_of_application: '', \n            required_skills: '',\n            type_of_job: 'full_time',\n            duration: '0',\n            salary_per_month: '',\n            date_of_posting: Date.now()\n        }\n        this.onChangetitle = this.onChangetitle.bind(this);\n        this.onChangemax_applications = this.onChangemax_applications.bind(this);\n        this.onChangemax_positions = this.onChangemax_positions.bind(this);\n        this.onChangedeadline_of_application = this.onChangedeadline_of_application.bind(this);\n        this.onChangerequired_skills = this.onChangerequired_skills.bind(this);\n        this.onChangetype_of_job = this.onChangetype_of_job.bind(this);\n        this.onChangeduration = this.onChangeduration.bind(this);\n        this.onChangesalary_per_month = this.onChangesalary_per_month.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    onChangetitle(event) {\n        this.setState({ title: event.target.value });\n    }\n\n    onChangemax_applications(event) {\n        this.setState({ max_applications: event.target.value });\n    }\n\n    onChangemax_positions(event) {\n        this.setState({ max_positions: event.target.value });\n    }\n\n    onChangedeadline_of_application(event) {\n        this.setState({ deadline_of_application: event.target.value });\n    }\n\n    onChangerequired_skills(event) {\n        this.setState({ required_skills: event.target.value });\n    }   \n\n    onChangetype_of_job(event) {\n        this.setState({ type_of_job: event.target.value });\n    }\n\n    onChangeduration(event) {\n        this.setState({ duration: event.target.value });\n    }\n\n    onChangesalary_per_month(event) {\n        this.setState({ salary_per_month: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newJob = {\n            title: this.state.title,\n            max_applications: this.state.max_applications,\n            max_positions:  this.state.max_positions,\n            deadline_of_application: (this.state.deadline_of_application),\n            required_skills: this.state.required_skills,\n            type_of_job: this.state.type_of_job,\n            duration: this.state.duration,\n            salary_per_month: this.state.salary_per_month,\n            name_recruiter: localStorage.getItem('user_name'),\n            email_recruiter: localStorage.getItem('user_email'),\n            date_of_posting: Date.now()\n        }\n\n        console.log(newJob);\n        console.log(localStorage.getItem('user_type'));\n        console.log(localStorage.getItem('isloggedin'));\n        if(localStorage.getItem('user_type') !== 'recruiter' || localStorage.getItem('isloggedin') !== 'true'){\n            alert(\"please login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }\n        else{\n            axios.post('http://localhost:4000/job/job/add',newJob)\n            .then(res => {\n                alert(\"job successfully added\");\n                console.log(res.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        }\n        this.setState({\n            title: '',\n            name_recrutier: '',\n            email_recruiter: '',\n            max_applications: '',\n            max_positions: '',\n            deadline_of_application: '', \n            required_skills: '',\n            type_of_job: 'full_time',\n            duration: '0',\n            salary_per_month: '',\n            date_of_posting: Date.now()\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>job title: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.title}\n                               onChange={this.onChangetitle}\n                               />\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <label>maximum number of positions: </label>\n                        <input type=\"number\" min=\"1\"\n                               className=\"form-control\" \n                               value={this.state.max_positions}\n                               onChange={this.onChangemax_positions}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <label>maximum number of applications you want: </label>\n                        <input type=\"number\" min=\"1\"\n                               className=\"form-control\" \n                               value={this.state.max_applications}\n                               onChange={this.onChangemax_applications}\n                               />  \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>deadline of application: </label>\n                        <input type=\"datetime-local\" \n                               className=\"form-control\" \n                               value={this.state.deadline_of_application}\n                               onChange={this.onChangedeadline_of_application}\n                               />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>skills required: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.required_skills}\n                               onChange={this.onChangerequired_skills}\n                               />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Type of job:</label>\n                        <div className=\"form-group\">\n                            <select className=\"form-control\"  onChange={this.onChangetype_of_job} value={this.state.type_of_job}>\n                                <option value=\"full_time\">full time</option>\n                                <option value=\"part_time\">part time</option>\n                                <option value=\"work_from_home\">work from home</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>duration: </label>\n                        <div className=\"form-group\">\n                            <select className=\"form-control\"  onChange={this.onChangeduration} value={this.state.duration}>\n                                <option value=\"0\">0</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>salary (in interger): </label>\n                        <input type=\"number\" min=\"1\"\n                               className=\"form-control\" \n                               value={this.state.salary_per_month}\n                               onChange={this.onChangesalary_per_month}\n                               />  \n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Add listing\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from 'react-bootstrap/Button'\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n\nexport default class Joblistings extends Component {\n    \n    constructor(props) {\n        super(props);\n        // this.deletejob = this.deletejob.bind(this)\n        this.state = {\n            listings: []\n        }\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('user_type') === \"recruiter\" && localStorage.getItem('isloggedin') === \"true\" ){\n            let email = localStorage.getItem('user_email');\n            const data_rec = {\n                email_rec: email\n            };\n            axios.post('http://localhost:4000/job/job/view', data_rec)\n            .then(response => {\n                console.log(response.data)\n                this.setState({listings: response.data});\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        }\n        else{\n            alert(\"login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }\n    }\n\n\n    deletejob(id) {\n        axios.post('http://localhost:4000/job/job/delete',{'id': id})\n        .then(response => { \n            console.log(response.data)\n        });\n        this.setState({\n          listings: this.state.listings.filter(el => el._id !== id)\n        })\n    }\n\n    deletejob = this.deletejob;\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>title</th>\n                            <th>date of posting</th>\n                            <th>number of applicants</th>\n                            <th>maximum number of positions</th>\n                            <th>delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.listings.map((job, i) => {\n                            const kaha_jana = {\n                                pathname: \"/job-listings/\"+job._id\n                            }\n                            const jana_kaha = {\n                                pathname: \"/edit-job/\"+job._id\n                            }\n                            return (\n                                <tr key={i} >\n                                    <td>{job.title}</td>\n                                    <td>{job.date_of_posting} </td>\n                                    <td>{job.max_applications}</td>\n                                    <td>{job.max_positions}</td>\n                                    <td> <Button variant=\"danger\" onClick={() => {this.deletejob(job._id) }}>Delete</Button></td>\n                                    <td>    <Link  to={kaha_jana} ><Button style = {{backgroundColor:'red'}} variant=\"contained\" >view</Button></Link></td>\n                                    <td>    <Link  to={jana_kaha} ><Button style = {{backgroundColor:'yellow'}} variant=\"contained\" >edit</Button></Link>\n                                    </td>\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n// import CustomerNavbar from \"./user-navbar.component\"\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nimport Button from 'react-bootstrap/Button'\n\n\nexport default class View_job_listings_applicant extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            search: '',\n            jobs: [],\n            job_type: 'full_time',\n            job_salary: '',\n            job_duration: '',\n            salary_lower:'',\n            salary_upper:'',\n            applied_jobs:[]\n        }\n        this.onChangeSearch = this.onChangeSearch.bind(this);\n        this.sortbyratinginc = this.sortbyratinginc.bind(this);\n        this.sortbyratingdec = this.sortbyratingdec.bind(this);\n        this.sortbydurationdec = this.sortbydurationdec.bind(this);\n        this.sortbydurationinc = this.sortbydurationinc.bind(this);\n        this.onchangedurationfilter = this.onchangedurationfilter.bind(this);\n        this.onSubmitdurationfilter = this.onSubmitdurationfilter.bind(this);\n\n        this.sortbysalarydec = this.sortbysalarydec.bind(this);\n        this.sortbysalaryinc = this.sortbysalaryinc.bind(this);\n        this.onChangejobtypefilter = this.onChangejobtypefilter.bind(this);\n        this.onSubmitjobtypefilter = this.onSubmitjobtypefilter.bind(this);\n\n        this.onchangesalarylower = this.onchangesalarylower.bind(this);\n        this.onchangesalaryupper = this.onchangesalaryupper.bind(this);\n        this.onSubmitsalaryrange = this.onSubmitsalaryrange.bind(this);\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('user_type') === \"applicant\" && localStorage.getItem('isloggedin') === \"true\" ){\n            let email = localStorage.getItem('user_email');\n            const data_rec = {\n                email_rec: email\n            };\n            axios.get('http://localhost:4000/job/job/view_for_applicant', data_rec)\n            .then(response => {\n                console.log(response.data)\n                this.setState({jobs: response.data});\n                console.log(this.state.jobs);\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n            const newval = {\n                applicant_email: localStorage.getItem(\"user_email\")\n            }\n            axios.post(\"http://localhost:4000/application/all_applied_jobs\",newval)\n             .then(response =>{\n                this.setState({applied_jobs: response.data});\n             })\n             .catch(function(error) {\n               window.alert(\"post error\")\n           })\n        }\n        else{\n            alert(\"login first\");\n            console.log(\"lul\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }\n    }\n    \n    onChangeSearch(event) {\n        this.setState({ search: event.target.value });\n        console.log(event.target.value)\n    }\n\n    onChangejobtypefilter(event){\n        this.setState({job_type: event.target.value});\n    }\n\n    onChangeType(event) {\n        this.setState({ type: event.target.value });\n    }\n\n    onchangesalarylower(event){\n        this.setState({salary_lower:event.target.value});\n    }\n\n    onchangesalaryupper(event){\n        this.setState({salary_upper:event.target.value});\n    }\n\n    onchangedurationfilter(event){\n        this.setState({job_duration: event.target.value});\n    }\n\n    onSubmitsalaryrange(e){\n        e.preventDefault();\n        const salaryminmax = {\n            min: this.state.salary_lower,\n            max: this.state.salary_upper\n        }\n        console.log(salaryminmax);\n        axios.post('http://localhost:4000/router/salaryfilter', salaryminmax)\n             .then(res => {\n                console.log(res.data);\n                this.setState({jobs: res.data});\n                \n            })\n             .catch(err =>\n                {\n                    console.log(err)\n                });\n\n        this.setState({\n            salary_lower : '',\n            salary_upper: ''\n        });\n    }\n\n    onSubmitjobtypefilter(e){\n        e.preventDefault();\n        console.log(this.state.job_type)\n        const jobtypefilter = {\n            job_ka_type: this.state.job_type\n        }\n        console.log(jobtypefilter);\n        axios.post('http://localhost:4000/router/job_type_filter', jobtypefilter)\n             .then(res => {\n                console.log(res.data);\n                this.setState({jobs: res.data});\n\n            })\n             .catch(err =>\n                {\n                    console.log(err)\n                });\n\n        this.setState({\n            job_type : 'full_time',\n        });\n\n    }\n\n    onSubmitdurationfilter(e){\n        e.preventDefault();\n        const dur = {\n            job_duration: this.state.job_duration,\n        }\n        console.log(dur);\n        axios.post('http://localhost:4000/router/job/filterbyduration', dur)\n             .then(res => {\n                console.log(res.data);\n                this.setState({jobs: res.data});\n\n            })\n             .catch(err =>\n                {\n                    console.log(err)\n                });\n\n        this.setState({\n            search : '',\n        });\n    }\n\n    sortbydurationdec = () =>{\n        let jobs = this.state.jobs, n = jobs.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = jobs[j].duration;\n                var y = jobs[j+1].duration;\n                if(x < y)\n                {\n                    var temper = jobs[j];\n                    jobs[j] = jobs[j+1];\n                    jobs[j+1] = temper;\n                }\n            }\n        }\n        this.setState({jobs: jobs});\n    }\n\n    sortbydurationinc = () =>{\n        let jobs = this.state.jobs, n = jobs.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = jobs[j].duration;\n                var y = jobs[j+1].duration;\n                if(x > y)\n                {\n                    var temper = jobs[j];\n                    jobs[j] = jobs[j+1];\n                    jobs[j+1] = temper;\n                }\n            }\n        }\n        this.setState({jobs: jobs});\n    }\n\n    sortbyratingdec = () =>{\n        let jobs = this.state.jobs, n = jobs.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = jobs[j].rating;\n                var y = jobs[j+1].rating;\n                if(x < y)\n                {\n                    var temper = jobs[j];\n                    jobs[j] = jobs[j+1];\n                    jobs[j+1] = temper;\n                }\n            }\n        }\n        this.setState({jobs: jobs});\n    }\n\n    sortbyratinginc = () =>{\n        let jobs = this.state.jobs, n = jobs.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = jobs[j].rating;\n                var y = jobs[j+1].rating;\n                if(x > y)\n                {\n                    var temper = jobs[j];\n                    jobs[j] = jobs[j+1];\n                    jobs[j+1] = temper;\n                }\n            }\n        }\n        this.setState({jobs: jobs});\n    }    \n\n    sortbysalarydec = () =>{\n        let jobs = this.state.jobs, n = jobs.length;\n        for(var i=0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = jobs[j].salary_per_month;\n                var y = jobs[j+1].salary_per_month;\n                if(x < y)\n                {\n                    var temper = jobs[j];\n                    jobs[j] = jobs[j+1];\n                    jobs[j+1] = temper;\n                }\n            }\n        }\n        this.setState({jobs: jobs});\n    }\n\n    sortbysalaryinc = () =>{\n        let jobs = this.state.jobs, n = jobs.length;\n        for(var i=0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = jobs[j].salary_per_month;\n                var y = jobs[j+1].salary_per_month;\n                if(x > y)\n                {\n                    var temper = jobs[j];\n                    jobs[j] = jobs[j+1];\n                    jobs[j+1] = temper;\n                }\n            }\n        }\n        this.setState({jobs: jobs});\n    }\n\n\n\n    render() {\n        const { jobs} = this.state;\n        return (\n            <div>\n                <p>consider 0 in duration as indefinite.</p>\n                {/* <form onSubmit={}> */}\n                    <div className=\"form-group\">\n                        <label>job title: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.search}\n                               onChange={this.onChangeSearch}\n                               />  \n                    </div>\n\n                    {/* <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Search\" className=\"btn btn-primary\"/>\n                    </div> */}\n                {/* </form> */}\n                <form onSubmit={this.onSubmitjobtypefilter}>\n                    <div className=\"form-group\">\n                        <label>job type: </label>\n                        {/* <div className=\"form-group\"> */}\n                         \n                            <select className=\"form-control\"  onChange={this.onChangejobtypefilter} value={this.state.job_type}>\n                                {/* <option value=\"0\">pick type</option> */}\n                                <option value=\"full_time\">full time</option>\n                                <option value=\"part_time\">part time</option>\n                                <option value=\"work_from_home\">work from home</option>\n                            </select>\n                        {/* </div>   */}\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"apply filter\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n\n                <form onSubmit={this.onSubmitsalaryrange}>\n                    <div className=\"form-group\">\n                        <label>range: </label>\n                        <br></br>\n                            <label>lower limit</label>\n                            <input  type=\"number\"\n                                    className=\"form-control\"\n                                    value={this.state.salary_lower}\n                                    onChange={this.onchangesalarylower}\n                                    />\n                            <label>upper limit</label>\n                            <input  type=\"number\"\n                                    className=\"form-control\"\n                                    value={this.state.salary_upper}\n                                    onChange={this.onchangesalaryupper}\n                                    />\n                        {/* </div>   */}\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"apply filter\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n                \n                <form onSubmit={this.onSubmitdurationfilter}>\n                    <div className=\"form-group\" onChange={this.onchangedurationfilter} value={this.state.job_duration} >\n                        <label>duration filter</label>\n                        <select>\n                            {/* <option value=\"0\">0  </option> */}\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"6\">6</option>\n                            <option value=\"7\">7</option>\n                        </select>&nbsp;&nbsp;&nbsp;&nbsp;   \n                    {/* </div>\n\n                    <div className=\"form-group\"> */}\n                        <input type=\"submit\" value=\"apply\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n                <Button variant=\"info\" onClick={this.sortbysalaryinc} >salary increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbysalarydec} >salary decreasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbydurationinc} >duration increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbydurationdec} >duration decreasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbyratinginc} >rating increasing</Button>&nbsp; \n                <Button variant=\"info\" onClick={this.sortbyratingdec} >rating decreasing</Button>\n                <br></br>\n                <br></br>\n\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>job title</th>\n                            <th>salary</th>\n                            {/* <th>positions left</th> */}\n                            <th>recruiter</th>\n                            <th>email of recruiter</th>\n                            <th>Rating</th>\n                            <th>duration</th>\n                            <th>maximum applications</th>\n                            <th>maximum positions</th>\n                            {/* <th>number of positions filled</th> */}\n                            <th>date of posting</th>\n                            <th>deadline of application</th>\n                            <th>required skills</th>\n                            <th>type of job</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    {\n\n                        this.state.jobs.map((job, i) => {\n                            const kaha_jana = {\n                                pathname: \"/job_apply/\"+job._id,\n                                // job: job,\n                                // yoyo: \"yoyo\"\n                            }\n                            // console.log(i);\n                            var array=[...this.state.applied_jobs]\n                                        let mark=false;\n                                        // console.log(array.length)\n                                        for(var j=0;j<array.length;j++)\n                                        {\n                                            if(array[j].job_id===job._id)\n                                            {\n                                                mark=true\n                                            }\n                                            // console.log(array[j].job_id,job._id)\n                                        }\n                                        var www = null;\n                                        if(mark){\n                                            www = \n                                            <Button  style = {{color:'red'}}  color=\"primary\" disabled>Applied</Button>\n                                        }\n                                        else{\n                                            if(job.number_of_positions_filled >= job.max_applications + job.max_applications){\n                                                www =  <Button  style = {{color:'black'}}  color=\"primary\" disabled>full</Button>\n                                            }\n                                            else{\n                                                www = \n                                                <Link to={kaha_jana}> <Button style = {{backgroundColor:'red'}} variant=\"contained\" onClick={()=>{\n                                                    console.log(i)\n \n                                                    \n                                                     \n                                                 }}>apply</Button></Link>\n                                            }\n\n                                        }\n                                        // console.log(i,mark)\n                                        // console.log(job.status)\n\n                            let x = 0, rating =0;\n                    \n                            //rating = product\n                            const wow = new Date(Date.now());\n                            const wowow = new Date(job.deadline_of_application);\n                            if(job.title.includes(this.state.search) || this.state.search === '' ){\n                                return (\n                                    <tr key={i}>\n                                        <td>{job.title}</td>\n                                        <td>{job.salary_per_month} </td>\n                                        <td>{job.name_recruiter}</td>\n                                        <td>{job.email_recruiter}</td>\n                                        <td>{job.rating}</td>\n                                        <td>{job.duration}</td>\n                                        <td>{job.max_applications}</td>\n                                        <td>{job.max_positions}</td>\n                                        <td>{job.date_of_posting}</td>\n                                        <td>{job.deadline_of_application}</td>\n                                        <td>{job.required_skills}</td>\n                                        <td>{job.type_of_job}</td>\n                                        <td>\n                                            {www}</td>\n                                    </tr>\n                                )\n                            }\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/esm/Button';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n\nexport default class Job_info extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applied_jobs:[],\n            job:[],\n            currentjob:[],\n            idid:'',\n            value:0,\n            sop:'',\n            lololol:false,\n            status:'not applied',\n            applicant_data:null,\n        }\n        // this.apply_job = this.apply_job.bind(this);\n        this.onChangesop = this.onChangesop.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangesop(event){\n        this.setState({sop: event.target.value});\n    }\n\n    componentDidMount(){\n        if(localStorage.getItem('user_type') !== \"applicant\" && localStorage.getItem(\"isloggedin\") !== true){\n            alert(\"please log in\");\n        }\n        else{\n        console.log(\"ko\")\n        const chunk = { \n            id: this.props.match.params.id,\n            applicant_email: localStorage.getItem(\"user_email\"),\n            // recruiter_email: \n        }\n        console.log(chunk.id)\n        axios.post('http://localhost:4000/application/app_p_or_n',{id: this.props.match.params.id})\n        .then(res => {\n            console.log(\"jii\")\n            var temper = 0;\n            // for(var i = 0 ; i<res[\"data\"].length ; i++){\n            //     if(res[\"data\"][i][\"job_id\"] === this.props.match.params.id && res[\"data\"][i][\"applicant_email\"] === localStorage.getItem(\"user_email\") &&  res[\"data\"][i][\"status\"] === \"applied\"){\n            //         this.setState({lololol: true});\n            //         console.log(this.state.lololol)\n            //         break;\n            //     }\n            //     else{\n            //         temper = 0;\n            //         console.log(\"lop\")\n            //     }\n            // }\n            var rat = res.data;\n            console.log(rat.status)\n            if(res.data.status === \"applied\")\n            this.setState({lololol:true});\n            console.log(this.state.lololol)\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        axios.post('http://localhost:4000/job/get_a_job_by_id', chunk)\n        .then(res => {\n            console.log(res.data);\n            this.setState({job: res.data});\n            \n            this.setState({lololol: true});\n        })\n        .catch(err =>\n            {\n                // if(err.response.data.message)\n                // alert(err.response.data.message);\n                console.log(err)\n        });\n\n        // getting the data of this applicant\n        const applicant_ka_data = {\n            applicant_ka_email: localStorage.getItem(\"user_email\")\n        }\n        axios.post('http://localhost:4000/applicant/get_an_applicant_by_email', applicant_ka_data)\n        .then(res => {\n            console.log(res.data);\n            this.setState({applicant_data: res.data});\n            \n            this.setState({lololol: true});\n        })\n        .catch(err =>\n            {\n                // if(err.response.data.message)\n                // alert(err.response.data.message);\n                console.log(err)\n        });\n    }\n    }    \n    \n    async onSubmit(e){\n        e.preventDefault();\n        console.log(this.props.match.params.id)        \n        const chunk = {\n            id: this.props.match.params.id\n        }\n        \n            // console.log(temper)\n            // if(temper === 0){\n                \n                // axios.post('http://localhost:4000/router/get_a_job_by_id', chunk)\n                //     .then(res => {\n                //         console.log(res.data);\n                //         this.setState({job: res.data});\n                        \n                //         this.setState({lololol: true});\n                //     })\n                //     .catch(err =>\n                //         {\n                //             // if(err.response.data.message)\n                //             // alert(err.response.data.message);\n                //             console.log(err)\n                //         });\n            var veer = true;\n\n            if(this.state.sop.split(' ').length>250){\n                window.alert(\"word limit crossed\");\n                veer = false;\n            }\n            else if(veer && this.state.sop === ''){\n                window.alert(\"enter statement of purpose\");\n            }\n            else if(this.state.applicant_data.application_count >20){\n                alert(\"max application limit reached\");\n            }\n            else{\n\n                \n\n\n                const yoyo = {\n                    sop: this.state.sop,\n                    email_recruiter: this.state.job.email_recruiter,\n                    name_recruiter: this.state.job.name_recruiter,\n                    deadline_of_application: this.state.job.deadline_of_application,\n                    job_salary_per_month: this.state.job.salary_per_month,\n                    status_of_job:this.state.job.status,\n                    job_id: this.state.job._id,\n                    applicant_email: localStorage.getItem(\"user_email\"),\n                    status: \"applied\",\n                    job_title: this.state.job.title,\n                    name_applicant:localStorage.getItem(\"user_name\"),\n                    skills: this.state.applicant_data.list_of_languages,\n                    education: this.state.applicant_data.education,\n                    job_type:this.state.job.type_of_job,\n                    rating: this.state.applicant_data.rating,\n                }\n                console.log(yoyo);\n                await axios.post('http://localhost:4000/application/addapplication', yoyo)\n                    .then(res => {\n                        console.log(res.data);\n                        // this.setState({jobs: res.data});\n                        \n                    })\n                    .catch(err =>\n                        {\n                            console.log(err)\n                        });\n                \n                \n                await axios.post('http://localhost:4000/applicant/increment_application_count', {email: localStorage.getItem(\"user_email\")})\n                .then(res => {\n                    console.log(res.data);\n                    // this.setState({jobs: res.data});\n                    \n                })\n                .catch(err =>\n                    {\n                        \n                        console.log(err)\n                    });\n\n                    this.setState({\n                        sop:''\n                    });\n                    this.props.history.push('/search_job');\n            }\n    }\n\n    // apply_job(e){\n    //     const datadata = {\n    //         applicant_email: localStorage.getItem('user_email'),\n    //         recruiter_email: this.state.job.email_recruiter,\n    //         job_id: this.props.match.params.id,\n\n    //     }\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    // componentDidMount() {\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    render() {\n\n        return (\n            \n            <div>\n                {/* {\n                    const kaha_jana = {\n                        pathname: \"/search_job\"\n                    }\n                } */}\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>sop: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.sop}\n                               onChange={this.onChangesop}\n                               />  \n                    </div>\n\n                    <div className=\"form-group\">{console.log(this.state.lololol)}\n                        {  <input  type=\"submit\" value=\"add\" className=\"btn btn-primary\"  /> }\n                    </div>\n                </form>\n                <div className=\"form-group\">\n                    <p>hii</p>\n\n                </div>\n            </div>\n        )\n\n\n    }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from 'react-bootstrap/Button'\n\nexport default class My_applications extends Component {\n    \n    constructor(props) {\n        super(props);\n        // this.deletejob = this.deletejob.bind(this)\n        this.state = {\n            listings: []\n        }\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('user_type') === \"applicant\" && localStorage.getItem('isloggedin') === \"true\" ){\n            let email = localStorage.getItem('user_email');\n            const data_rec = {\n                email_rec: email\n            };\n            axios.post('http://localhost:4000/application/all_my_applications', data_rec)\n            .then(response => {\n                console.log(response.data)\n                this.setState({listings: response.data});\n            })\n            .catch(function(error) {\n                // if(error.response.data.message)\n                // alert(error.response.data.message);\n                console.log(error);\n            })\n        }\n        else{\n            alert(\"login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }\n    }\n\n\n    rate_recruiter(id) {\n        \n    }\n\n    rate_recruiter = this.rate_recrutier;\n\n    render() {\n        return (\n            <div>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>job title</th>\n                            <th>date of joining</th>\n                            <th>salary per month</th>\n                            <th>status of job</th>\n                            <th>rate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.listings.map((application, i) => {\n                            var vivi = null;\n                            if(application.status === \"accepted\"){\n                                vivi = <td> <Button variant=\"danger\" disabled onClick={() => {this.rate_recrutier() }}>rate</Button></td>\n                            }\n                            return (\n                                <tr key={i} rate_recrutier = {this.rate_recruiter}>\n                                    <td>{application.job_title}</td>\n                                    <td>{application.date_of_joining} </td>\n                                    <td>{application.job_salary_per_month}</td>\n                                    <td>{application.status}</td>\n                                    {/* <td> <Button variant=\"danger\" onClick={() => {this.rate_recrutier() }}>rate</Button></td> */}\n                                    {vivi}\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/esm/Button';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n\nexport default class Job_application_info extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applied_jobs:[],\n            applications:[],\n            currentjob:[],\n            idid:'',\n            value:0,\n            sop:'',\n            lololol:false,\n            status:'not applied'\n        }\n        this.sortbyratinginc = this.sortbyratinginc.bind(this);\n        this.sortbyratingdec = this.sortbyratingdec.bind(this);\n        this.sortbydoadec = this.sortbydoadec.bind(this);\n        this.sortbydoainc = this.sortbydoainc.bind(this);\n        this.sortbynamedec = this.sortbynamedec.bind(this);\n        this.sortbynameinc = this.sortbynameinc.bind(this);\n        \n        this.shortlist = this.shortlist.bind(this);\n        this.accept = this.accept.bind(this);\n        this.reject = this.reject.bind(this);\n    }\n\n    onChangesop(event){\n        this.setState({sop: event.target.value});\n    }\n\n    componentDidMount(){\n        if(localStorage.getItem('user_type') !== \"recruiter\" && localStorage.getItem(\"isloggedin\") !== true){\n            alert(\"please log in\");\n        }\n        else{\n            console.log(\"ko\")\n            const chunk = { \n                id: this.props.match.params.id,\n                email_recruiter: localStorage.getItem(\"user_email\"), \n            }\n            console.log(chunk.id)\n            axios.post('http://localhost:4000/application/all_my_non-rejected_applications_of_perticular_job',chunk)\n            .then(res => {\n                console.log(res.data)\n                var temper = 0;\n                this.setState({applications: res.data});            \n            })\n            .catch(err => {\n                console.log(err);\n            });\n        }\n    }    \n    \n    async reject(id , mail ){\n        axios.post('http://localhost:4000/application/reject_an_application',{id:id})\n        .then(res => {\n            console.log(res.data)\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        axios.post('http://localhost:4000/application/decrement_application_count', {email: mail})\n        .then(res => {\n            console.log(res.data);\n        })\n        .catch(err =>\n            {\n                console.log(err)\n            });\n        window.location.reload();\n    }\n\n    accept(id){\n        axios.post('http://localhost:4000/application/accept_an_application',{id:id })\n        .then(res => {\n            console.log(res.data)            \n        })\n        .catch(err => {\n            console.log(err);\n        });\n        window.location.reload();\n    }\n\n    shortlist(id){\n        axios.post('http://localhost:4000/application/shortlist_an_application',{id:id})\n        .then(res => {\n            console.log(res.data)            \n        })\n        .catch(err => {\n            console.log(err);\n        });\n        window.location.reload();\n    }\n\n    async onSubmit(e){\n        e.preventDefault();\n        console.log(this.props.match.params.id)        \n        const chunk = {\n            id: this.props.match.params.id\n        }\n            var veer = true;\n\n            // if(this.state.sop.split(' ').length>250){\n            //     window.alert(\"word limit crossed\");\n            //     veer = false;\n            // }\n            // else if(veer && this.state.sop === ''){\n            //     window.alert(\"enter statement of purpose\");\n            // }\n            // else{\n            //     const yoyo = {\n            //         sop: this.state.sop,\n            //         email_recruiter: this.state.job.email_recruiter,\n            //         name_recruiter: this.state.job.name_recruiter,\n            //         deadline_of_application: this.state.job.deadline_of_application,\n            //         job_salary_per_month: this.state.job.salary_per_month,\n            //         status_of_job:this.state.job.status,\n            //         job_id: this.state.job._id,\n            //         applicant_email: localStorage.getItem(\"user_email\"),\n            //         status: \"applied\",\n            //         job_title: this.state.job.title\n            //     }\n            //     console.log(yoyo);\n            //     await axios.post('http://localhost:4000/router/addapplication', yoyo)\n            //         .then(res => {\n            //             console.log(res.data);\n            //             // this.setState({jobs: res.data});\n                        \n            //         })\n            //         .catch(err =>\n            //             {\n            //                 // if(err.response.data.message)\n            //                 // alert(err.response.data.message);\n            //                 console.log(err)\n            //             });\n\n            //         this.setState({\n            //             sop:''\n            //         });\n            //         this.props.history.push('/search_job');\n            // }\n    }\n\n    // apply_job(e){\n    //     const datadata = {\n    //         applicant_email: localStorage.getItem('user_email'),\n    //         recruiter_email: this.state.job.email_recruiter,\n    //         job_id: this.props.match.params.id,\n\n    //     }\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    // componentDidMount() {\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    sortbydoadec = () => {\n        let applications = this.state.applications, n = applications.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = applications[j].date_of_application;\n                var y = applications[j+1].date_of_application;\n                if(x < y)\n                {\n                    var temper = applications[j];\n                    applications[j] = applications[j+1];\n                    applications[j+1] = temper;\n                }\n            }\n        }\n        this.setState({applications: applications});\n    }\n\n    sortbydoainc = () => {\n        let applications = this.state.applications, n = applications.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = applications[j].date_of_application;\n                var y = applications[j+1].date_of_application;\n                if(x > y)\n                {\n                    var temper = applications[j];\n                    applications[j] = applications[j+1];\n                    applications[j+1] = temper;\n                }\n            }\n        }\n        this.setState({applications: applications});\n    }\n\n    sortbynamedec = () => {\n        let applications = this.state.applications, n = applications.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = applications[j].name_applicant;\n                var y = applications[j+1].name_applicant;\n                if(x < y)\n                {\n                    var temper = applications[j];\n                    applications[j] = applications[j+1];\n                    applications[j+1] = temper;\n                }\n            }\n        }\n        this.setState({applications: applications});\n    }\n\n    sortbynameinc = () => {\n        let applications = this.state.applications, n = applications.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = applications[j].name_applicant;\n                var y = applications[j+1].name_applicant;\n                if(x > y)\n                {\n                    var temper = applications[j];\n                    applications[j] = applications[j+1];\n                    applications[j+1] = temper;\n                }\n            }\n        }\n        this.setState({applications: applications});\n    }\n\n    sortbyratingdec = () =>{\n        let applications = this.state.applications, n = applications.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = applications[j].applicant_rating;\n                var y = applications[j+1].applicant_rating;\n                if(x < y)\n                {\n                    var temper = applications[j];\n                    applications[j] = applications[j+1];\n                    applications[j+1] = temper;\n                }\n            }\n        }\n        this.setState({applications: applications});\n    }\n\n    sortbyratinginc = () =>{\n        let applications = this.state.applications, n = applications.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = applications[j].applicant_rating;\n                var y = applications[j+1].applicant_rating;\n                if(x > y)\n                {\n                    var temper = applications[j];\n                    applications[j] = applications[j+1];\n                    applications[j+1] = temper;\n                }\n            }\n        }\n        this.setState({applications: applications});\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"info\" onClick={this.sortbynameinc} >name increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbynamedec} >name decreasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbydoainc} >date of application increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbydoadec} >date of application decreasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbyratinginc} >rating increasing</Button>&nbsp; \n                <Button variant=\"info\" onClick={this.sortbyratingdec} >rating decreasing</Button>\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>applicant's name</th>\n                            <th>skills of applicant</th>\n                            <th>date of application</th>\n                            <th>education</th>\n                            <th>statement of purpose</th>\n                            <th>stage of application</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.applications.map((application, i) => {\n                            let divi = null;\n                            if(application.status === \"applied\"){\n                                divi = \n                                <div>\n                                    <td><Button style = {{backgroundColor:'yellow'}} onClick={() => {this.shortlist(application._id)}} >shortlist</Button></td>\n                                    <td><Button onClick={() => {this.reject(application._id , application.applicant_email)}} >reject</Button></td>\n                                </div>\n                            }\n                            else if(application.status === \"shortlisted\"){\n                                divi = \n                                <div>   \n                                    <td><Button style = {{backgroundColor:'red'}} onClick={() => {this.accept(application._id)} }>accept</Button></td>\n                                    <td><Button onClick={() => {this.reject(application._id, application.applicant_email)}} >reject</Button></td>\n                                </div>\n                            }\n                            else if(application.status === \"accepted\"){\n                                divi = \n                                <div>\n                                    <td><Button disabled>accepted</Button></td>\n                                </div>\n                            }\n                            var yoyo = null;\n                            {\n                                console.log(application.education_applicant)\n                                application.education_applicant.map((xx,j) => {\n                                    var yoyoyo = \n                                    <div>\n                                        <p>{xx[j]}</p><br></br>\n                                    </div>\n                                })\n                            }\n                            return (\n                                <tr key={i} >\n                                    <td>{application.name_applicant}</td>\n                                    <td>{application.skills_applicant} </td>\n                                    <td>{application.date_of_application}</td>\n                                    <td>\n                                        {yoyo}\n                                    </td>\n                                    <td>{application.sop}</td>\n                                    <td>{application.status}</td>\n                                    <td>{divi}</td>\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n","import React, {Component} from 'react';\nimport axios from 'axios';\n// import React, {Component} from 'react';\n// import axios from 'axios';\nimport bcrypt from 'bcryptjs';\n// import TextField from 'material-ui/TextField';\n// import getMuiTheme from 'material-ui/styles/getMuiTheme'\n// import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\n// import Paper from 'material-ui/Paper';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nexport default class Edit_job extends React.Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            name_recrutier: '',\n            email_recruiter: '',\n            max_applications: '',\n            max_positions: '',\n            deadline_of_application: '', \n            required_skills: '',\n            type_of_job: 'full_time',\n            duration: '0',\n            salary_per_month: '',\n            date_of_posting: Date.now()\n        }\n        this.onChangetitle = this.onChangetitle.bind(this);\n        this.onChangemax_applications = this.onChangemax_applications.bind(this);\n        this.onChangemax_positions = this.onChangemax_positions.bind(this);\n        this.onChangedeadline_of_application = this.onChangedeadline_of_application.bind(this);\n        this.onChangerequired_skills = this.onChangerequired_skills.bind(this);\n        this.onChangetype_of_job = this.onChangetype_of_job.bind(this);\n        this.onChangeduration = this.onChangeduration.bind(this);\n        this.onChangesalary_per_month = this.onChangesalary_per_month.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n    \n    onChangetitle(event) {\n        this.setState({ title: event.target.value });\n    }\n\n    onChangemax_applications(event) {\n        this.setState({ max_applications: event.target.value });\n    }\n\n    onChangemax_positions(event) {\n        this.setState({ max_positions: event.target.value });\n    }\n\n    onChangedeadline_of_application(event) {\n        this.setState({ deadline_of_application: event.target.value });\n    }\n\n    onChangerequired_skills(event) {\n        this.setState({ required_skills: event.target.value });\n    }   \n\n    onChangetype_of_job(event) {\n        this.setState({ type_of_job: event.target.value });\n    }\n\n    onChangeduration(event) {\n        this.setState({ duration: event.target.value });\n    }\n\n    onChangesalary_per_month(event) {\n        this.setState({ salary_per_month: event.target.value });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const newJob = {\n            title: this.state.title,\n            max_applications: this.state.max_applications,\n            max_positions:  this.state.max_positions,\n            deadline_of_application: Date(this.state.deadline_of_application),\n            required_skills: this.state.required_skills,\n            type_of_job: this.state.type_of_job,\n            duration: this.state.duration,\n            salary_per_month: this.state.salary_per_month,\n            name_recruiter: localStorage.getItem('user_name'),\n            email_recruiter: localStorage.getItem('user_email'),\n            date_of_posting: Date.now()\n        }\n\n        console.log(newJob);\n        console.log(localStorage.getItem('user_type'));\n        console.log(localStorage.getItem('isloggedin'));\n        if(localStorage.getItem('user_type') !== 'recruiter' || localStorage.getItem('isloggedin') !== 'true'){\n            alert(\"please login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }\n        else{\n            axios.post('http://localhost:4000/job/job/edit',newJob)\n            .then(res => {\n                alert(\"job successfully edited\");\n                console.log(res.data)\n            })\n            .catch(function(error) {\n                console.log(error);\n            })\n        }\n        this.setState({\n            title: '',\n            name_recrutier: '',\n            email_recruiter: '',\n            max_applications: '',\n            max_positions: '',\n            deadline_of_application: '', \n            required_skills: '',\n            type_of_job: 'full_time',\n            duration: '0',\n            salary_per_month: '',\n            date_of_posting: Date.now()\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>    \n                    <div className=\"form-group\">\n                        <label>maximum number of positions: </label>\n                        <input type=\"number\" min=\"1\"\n                               className=\"form-control\" \n                               value={this.state.max_positions}\n                               onChange={this.onChangemax_positions}\n                               />  \n                    </div>\n                    <div className=\"form-group\">\n                        <label>maximum number of applications you want: </label>\n                        <input type=\"number\" min=\"1\"\n                               className=\"form-control\" \n                               value={this.state.max_applications}\n                               onChange={this.onChangemax_applications}\n                               />  \n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>deadline of application: </label>\n                        <input type=\"datetime-local\" \n                               className=\"form-control\" \n                               value={this.state.deadline_of_application}\n                               onChange={this.onChangedeadline_of_application}\n                               />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>skills required: </label>\n                        <input type=\"text\" \n                               className=\"form-control\" \n                               value={this.state.required_skills}\n                               onChange={this.onChangerequired_skills}\n                               />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Type of job:</label>\n                        <div className=\"form-group\">\n                            <select className=\"form-control\"  onChange={this.onChangetype_of_job} value={this.state.type_of_job}>\n                                <option value=\"full_time\">full time</option>\n                                <option value=\"part_time\">part time</option>\n                                <option value=\"work_from_home\">work from home</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>duration: </label>\n                        <div className=\"form-group\">\n                            <select className=\"form-control\"  onChange={this.onChangeduration} value={this.state.duration}>\n                                <option value=\"0\">0</option>\n                                <option value=\"1\">1</option>\n                                <option value=\"2\">2</option>\n                                <option value=\"3\">3</option>\n                                <option value=\"4\">4</option>\n                                <option value=\"5\">5</option>\n                                <option value=\"6\">6</option>\n                            </select>\n                        </div>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>salary (in interger): </label>\n                        <input type=\"number\" min=\"1\"\n                               className=\"form-control\" \n                               value={this.state.salary_per_month}\n                               onChange={this.onChangesalary_per_month}\n                               />  \n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"Add listing\" className=\"btn btn-primary\"/>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport axios from 'axios';\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Button from 'react-bootstrap/Button'\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\nexport default class My_employees extends Component {\n    \n    constructor(props) {\n        super(props);\n        // this.deletejob = this.deletejob.bind(this)\n        this.state = {\n            listings: []\n        }\n        this.sortbynamedec = this.sortbynamedec.bind(this);\n        this.sortbynameinc = this.sortbynameinc.bind(this);\n        this.sortbydojdec = this.sortbydojdec.bind(this);\n        this.sortbydojinc = this.sortbydojinc.bind(this);\n        this.sortbyratingdec = this.sortbyratingdec.bind(this);\n        this.sortbyratinginc = this.sortbyratinginc.bind(this);\n        this.sortbytitledec = this.sortbytitledec.bind(this);\n        this.sortbytitleinc = this.sortbytitleinc.bind(this);\n    }\n\n    componentDidMount() {\n        if(localStorage.getItem('user_type') === \"recruiter\" && localStorage.getItem('isloggedin') === \"true\" ){\n            let email = localStorage.getItem('user_email');\n            const data_rec = {\n                email_rec: email\n            };\n            axios.post('http://localhost:4000/application/all_my_employees', data_rec)\n            .then(response => {\n                console.log(response.data)\n                this.setState({listings: response.data});\n            })\n            .catch(function(error) {\n                // if(error.response.data.message)\n                // alert(error.response.data.message);\n                console.log(error);\n            })\n        }\n        else{\n            alert(\"login first\");\n            this.props.history.push(\"/\");\n            window.location.reload();\n        }\n    }\n\n\n    rate_applicant(id) {\n\n    }\n\n    rate_applicant = this.rate_applicant;\n\n    sortbynamedec = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].name_applicant;\n                var y = listings[j+1].name_applicant;\n                if(x < y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    sortbynameinc = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].name_applicant;\n                var y = listings[j+1].name_applicant;\n                if(x > y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n    \n    sortbytitledec = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].job_title;\n                var y = listings[j+1].job_title;\n                if(x < y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    sortbytitleinc = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].job_title;\n                var y = listings[j+1].job_title;\n                if(x > y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    sortbydojdec = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = (listings[j].date_of_joining);\n                var y = (listings[j+1].date_of_joining);\n                // var d1 = x.getTime();\n                // let d2 = y.getTime();\n                if(x<y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    sortbydojinc = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].date_of_joining;\n                var y = listings[j+1].date_of_joining;\n                if(x > y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    sortbyratingdec = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].applicant_rating;\n                var y = listings[j+1].applicant_rating;\n                if(x < y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    sortbyratinginc = () => {\n        let listings = this.state.listings, n = listings.length;\n        for(var i =0; i < n-1; i++)\n        {\n            for(var j=0; j < n-1; j++)\n            {\n                var x = listings[j].applicant_rating;\n                var y = listings[j+1].applicant_rating;\n                if(x > y)\n                {\n                    var temper = listings[j];\n                    listings[j] = listings[j+1];\n                    listings[j+1] = temper;\n                }\n            }\n        }\n        this.setState({listings: listings});\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"info\" onClick={this.sortbynameinc} >name increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbynamedec} >name decreasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbytitleinc} >job title increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbytitledec} >job title decreasing</Button>&nbsp; <br></br><br></br>\n                <Button variant=\"info\" onClick={this.sortbydojinc} >date of joining increasing</Button>&nbsp; \n                <Button variant=\"info\" onClick={this.sortbydojdec} >date of joining decreasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbyratinginc} >rating increasing</Button>&nbsp;\n                <Button variant=\"info\" onClick={this.sortbyratingdec} >rating decreasing</Button>&nbsp;\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr>\n                            <th>applicant name</th>\n                            <th>date of joining</th>\n                            <th>job type</th>\n                            <th>job title</th>\n                            {/* <th>date of posting</th> */}\n                            <th>applicant's rating</th>\n                            <th>rate</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                    { \n                        this.state.listings.map((application, i) => {\n                            const kaha_jana = {\n                                pathname: \"/my-employees/\"+application.applicant_email,\n                            }\n                            var vivi = null;\n                            // if(application.status === \"accepted\"){\n                                vivi = <td> <Link to={kaha_jana} ><Button  variant=\"danger\" onClick={() => { }}>rate</Button></Link></td>\n                            // }\n                            return (\n                                <tr key={i} rate_recrutier = {this.rate_recruiter}>\n                                    <td>{application.name_applicant}</td>\n                                    <td>{application.date_of_joining} </td>\n                                    <td>{application.job_type}</td>\n                                    <td>{application.job_title}</td>\n                                    {/* <td>{application.date_of_joining}</td> */}\n                                    <td>{application.applicant_rating}</td>\n                                    {/* <td> <Button variant=\"danger\" onClick={() => {this.rate_recrutier() }}>rate</Button></td> */}\n                                    {vivi}\n                                </tr>\n                            )\n                        })\n                    }\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport Button from 'react-bootstrap/esm/Button';\nimport { BrowserRouter as Router, Route, Link} from \"react-router-dom\";\n\n\nexport default class Rate_applicant extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            applied_jobs:[],\n            job:[],\n            currentjob:[],\n            idid:'',\n            value:0,\n            sop:'',\n            lololol:false,\n            status:'not applied',\n            applicant_data:null,\n            rating:5,\n        }\n        // this.apply_job = this.apply_job.bind(this);\n        this.onChangerating = this.onChangerating.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    onChangerating(event){\n        this.setState({rating: event.target.rating});\n    }\n\n    componentDidMount(){\n        console.log(\"ko\")\n        const chunk = { \n            email: this.props.match.params.id,\n            // applicant_email: localStorage.getItem(\"user_email\"),\n            // recruiter_email: \n        }\n        console.log(this.props.match.params)\n        console.log(chunk)\n        axios.post('http://localhost:4000/router/opop',chunk)  //this is unused\n        .then(res => {\n            console.log(\"jii\")\n            var temper = 0;\n\n        })\n        .catch(err => {\n            console.log(err);\n        });\n        \n    }    \n    \n    async onSubmit(e){\n        e.preventDefault();\n        console.log(this.props.match.params.id)        \n        const chunk = {\n            id: this.props.match.params.id\n        }\n        \n            var veer = true;\n\n            {\n\n                \n\n\n                const yoyo = {\n\n                    email : this.props.match.params.id,\n                    value : this.state.rating\n                }\n                console.log(yoyo);\n\n                var temp = {\n                    applicant_ka_email : this.props.match.params.id,\n                }\n\n                await axios.post('http://localhost:4000/Applicant/get_an_applicant_by_email', temp) //no such route found\n                .then(res => {\n                    console.log(res.data);\n                    var ratecount = res.data.rate_count\n                    var rate = res.data.rating\n                    var newrating = (rate*ratecount+this.state.rating)/(ratecount+1)\n                    ratecount+=1\n                    var doupdate = {\n                        email:this.props.match.params.id,\n                        rate_count:ratecount,\n                        rating:newrating\n                    }\n                    this.setState({\n                        rating:newrating\n                    });\n                    axios.post('http://localhost:4000/Applicant/rate_an_applicant', doupdate) //no such route found\n                    .then(res => {\n                        console.log(res.data);\n                        // this.setState({jobs: res.data});\n                        \n                    })\n                    .catch(err =>\n                        {\n                            // if(err.response.data.message)\n                            // alert(err.response.data.message);\n                            console.log(err)\n                        });\n                    // this.setState({jobs: res.data});\n                    \n                })\n                .catch(err =>\n                    {\n                        // if(err.response.data.message)\n                        // alert(err.response.data.message);\n                        console.log(err)\n                    });\n\n\n\n                \n                \n              \n                    // this.setState({\n                    //     rating:newrating\n                    // });\n                    this.props.history.push('/job-listings');\n            }\n    }\n\n    // apply_job(e){\n    //     const datadata = {\n    //         applicant_email: localStorage.getItem('user_email'),\n    //         recruiter_email: this.state.job.email_recruiter,\n    //         job_id: this.props.match.params.id,\n\n    //     }\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    // componentDidMount() {\n    //     const u = this.props.match.params.yoyo;\n    //     console.log(u)\n    // }\n\n    render() {\n\n        return (\n            \n            <div>\n                {/* {\n                    const kaha_jana = {\n                        pathname: \"/search_job\"\n                    }\n                } */}\n                <form onSubmit={this.onSubmit}>\n                    <div className=\"form-group\">\n                        <label>rate: </label>\n                        <select className=\"form-control\"  onChange={this.onChangerating} value={this.state.rating}>\n                            {/* <option value=\"0\">pick type</option> */}\n                            <option value=\"0\">0</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        {  <input  type=\"submit\" value=\"add\" className=\"btn btn-primary\"  /> }\n                    </div>\n                </form>\n                <div className=\"form-group\">\n                    <p>hii</p>\n\n                </div>\n            </div>\n        )\n\n\n    }\n}\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport UsersList from './components/Users/UsersList'\nimport Home from './components/Common/Home'\nimport Register from './components/Common/Register'\nimport Profileedit_recruiter from './components/Common/Profileedit_recruiter'\nimport Profileedit_applicant from './components/Common/Profileedit_applicant'\nimport Navbar from './components/templates/Navbar'\nimport Applicant_navbar from './components/templates/Applicant_navbar'\nimport Profile from './components/Users/Profile'\nimport Login from './components/Common/Login'\nimport Recruiter_navbar from './components/templates/Recruiter_navbar';\nimport Add_job from './components/Common/Add_jobs';\nimport Viewjoblisting from './components/Common/Joblistings';\nimport View_job_listings_applicant from './components/Common/View_job_listings_applicant';\nimport Job_info from './components/Common/Job_info';\nimport My_applications from './components/Common/my_applications';\nimport Job_application_info from './components/Common/job_application_info_rec';\nimport Edit_job from './components/Common/Edit-job';\nimport My_employees from './components/Common/my_employees';\nimport Rate_applicant from './components/Common/rate_my_employee';\n\n\nclass App extends React.Component{\n  render(){\n    let user_type = localStorage.getItem('user_type');\n    let navbar = null;\n    console.log(user_type);\n    if(user_type === \"applicant\"){\n      console.log(\"applicant\");\n      navbar = <Applicant_navbar/>;\n    }\n    else if(user_type === \"recruiter\"){\n      console.log(\"recruiter\");\n      navbar = <Recruiter_navbar/>;\n    }\n    else{\n      console.log(\"lul\");\n      navbar = <Navbar/>\n    }\n    return (\n      <Router>\n        <div className=\"container\">\n          {navbar}\n          <br/>\n          <Route exact path=\"/\" render={()=>{\n            if(user_type === \"applicant\"){\n              console.log(\"111111\");\n              return <Profileedit_applicant/>\n            }\n            else if(user_type === \"recruiter\"){\n              return <Profileedit_recruiter/>\n            }\n            else{\n              return <Login/>\n            }\n          }} />\n          \n          <Route path=\"/users\" exact component={UsersList}/>\n          <Route path=\"/register\" component={Register}/>\n          <Route path=\"/profile\" component={Profile}/>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"/profileedit_applicant\" component={Profileedit_applicant}/>\n          <Route path=\"/profileedit_recruiter\" component={Profileedit_recruiter}/>\n          <Route path=\"/addjob\" component={Add_job} />\n          <Route path=\"/edit-job/:id\" component={Edit_job} />\n          <Route exact path=\"/job-listings\" component={Viewjoblisting} />\n          <Route path=\"/job-listings/:id\" component={Job_application_info} />\n          <Route path=\"/search_job\" component={View_job_listings_applicant} />\n          <Route path=\"/job_apply/:id\" component={Job_info} />\n          <Route path=\"/my_applications\" component={My_applications} />\n          <Route exact path=\"/my-employees\" component={My_employees} />\n          <Route path=\"/my-employees/:id\" component={Rate_applicant} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}